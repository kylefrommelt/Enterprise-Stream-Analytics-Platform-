{{- if and .Values.monitoring.enabled .Values.monitoring.grafana.enabled }}
# Grafana deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        fsGroup: 472
        runAsUser: 472
      containers:
        - name: grafana
          image: "grafana/grafana:9.3.6"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.monitoring.grafana.adminUser | quote }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.monitoring.grafana.adminPassword | quote }}
            - name: GF_PATHS_CONFIG
              value: /etc/grafana/grafana.ini
            - name: GF_PATHS_DATA
              value: /var/lib/grafana
            - name: GF_PATHS_HOME
              value: /usr/share/grafana
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
          resources:
            {{- toYaml .Values.monitoring.grafana.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: storage
              mountPath: /var/lib/grafana
            - name: datasources-config
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-grafana-config
        - name: datasources-config
          configMap:
            name: {{ .Release.Name }}-grafana-datasources
        - name: dashboards-config
          configMap:
            name: {{ .Release.Name }}-grafana-dashboards
        - name: dashboards
          configMap:
            name: {{ .Release.Name }}-grafana-dashboard-definitions
        - name: storage
          {{- if .Values.monitoring.grafana.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-grafana
          {{- else }}
          emptyDir: {}
          {{- end }}
---
# Grafana service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  type: {{ .Values.monitoring.grafana.service.type }}
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
      {{- if eq .Values.monitoring.grafana.service.type "NodePort" }}
      nodePort: {{ .Values.monitoring.grafana.service.nodePort }}
      {{- end }}
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# Grafana ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-config
  labels:
    app.kubernetes.io/name: grafana-config
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
data:
  grafana.ini: |-
    [server]
    domain = grafana.local
    root_url = %(protocol)s://%(domain)s/
    serve_from_sub_path = false

    [security]
    admin_user = {{ .Values.monitoring.grafana.adminUser }}
    admin_password = {{ .Values.monitoring.grafana.adminPassword }}

    [auth.anonymous]
    enabled = {{ .Values.monitoring.grafana.anonymousAccess }}

    [analytics]
    check_for_updates = false

    [users]
    allow_sign_up = false
    auto_assign_org = true
    auto_assign_org_role = Viewer

    [dashboards]
    versions_to_keep = 20
    min_refresh_interval = 5s
---
# Grafana Datasources ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-datasources
  labels:
    app.kubernetes.io/name: grafana-datasources
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
data:
  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://{{ .Release.Name }}-prometheus:9090
      isDefault: true
      editable: false
      jsonData:
        timeInterval: "5s"
---
# Grafana Dashboards ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-dashboards
  labels:
    app.kubernetes.io/name: grafana-dashboards
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
data:
  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'Stream Analytics Dashboards'
      orgId: 1
      folder: 'Stream Analytics'
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
---
# Grafana Dashboard Definitions ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-grafana-dashboard-definitions
  labels:
    app.kubernetes.io/name: grafana-dashboard-definitions
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
data:
  kafka_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 1,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "displayName": "${__field.labels.topic}",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 80
                  }
                ]
              }
            }
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.5",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "kafka_server_brokertopicmetrics_messagesinpersec_rate",
              "interval": "",
              "legendFormat": "{{topic}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Messages In Per Second",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "5s",
      "schemaVersion": 27,
      "style": "dark",
      "tags": [
        "kafka",
        "streaming"
      ],
      "title": "Kafka Monitoring",
      "uid": "kafka",
      "version": 1
    }
  data_quality_dashboard.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 2,
      "links": [],
      "panels": [
        {
          "datasource": null,
          "gridPos": {
            "h": 3,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 1,
          "options": {
            "content": "# Data Quality Monitoring\nThis dashboard provides metrics on data quality across the Stream Analytics Pipeline.",
            "mode": "markdown"
          },
          "pluginVersion": "7.5.5",
          "title": "Data Quality Dashboard",
          "type": "text"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "displayName": "${__field.labels.source} - ${__field.labels.field}",
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "red",
                    "value": 0.1
                  }
                ]
              }
            }
          },
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 3
          },
          "id": 2,
          "legend": {
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "7.5.5",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "stream_analytics_null_rate",
              "interval": "",
              "legendFormat": "{{source}} - {{field}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Null Rate by Field",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "timeseries",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percentunit",
              "label": null,
              "logBase": 1,
              "max": "1",
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": false
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "datasource": "Prometheus",
          "fieldConfig": {
            "defaults": {
              "color": {
                "fixedColor": "red",
                "mode": "fixed"
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "green",
                    "value": null
                  },
                  {
                    "color": "orange",
                    "value": 1
                  },
                  {
                    "color": "red",
                    "value": 5
                  }
                ]
              }
            },
            "overrides": []
          },
          "gridPos": {
            "h": 8,
            "w": 6,
            "x": 12,
            "y": 3
          },
          "id": 3,
          "options": {
            "colorMode": "value",
            "graphMode": "area",
            "justifyMode": "auto",
            "orientation": "auto",
            "reduceOptions": {
              "calcs": [
                "sum"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "7.5.5",
          "targets": [
            {
              "expr": "sum(stream_analytics_data_quality_checks_failing)",
              "interval": "",
              "legendFormat": "",
              "refId": "A"
            }
          ],
          "title": "Total Failing Data Quality Checks",
          "type": "stat"
        }
      ],
      "refresh": "10s",
      "schemaVersion": 27,
      "style": "dark",
      "tags": [
        "data-quality",
        "streaming"
      ],
      "title": "Data Quality Monitoring",
      "uid": "data-quality",
      "version": 1
    }
---
{{- if .Values.monitoring.grafana.persistence.enabled }}
# Grafana PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-grafana
  labels:
    app.kubernetes.io/name: grafana-storage
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.monitoring.grafana.persistence.size }}
{{- end }}
{{- end }} 