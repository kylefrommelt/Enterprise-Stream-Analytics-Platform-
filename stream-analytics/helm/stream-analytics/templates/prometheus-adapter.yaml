{{- if and .Values.monitoring.enabled .Values.monitoring.prometheusAdapter.enabled }}
# Prometheus Adapter ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-prometheus-adapter
  labels:
    app.kubernetes.io/name: prometheus-adapter-config
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
data:
  config.yaml: |-
    rules:
    # Kafka message rate metrics
    - seriesQuery: 'kafka_server_brokertopicmetrics_messagesinpersec_rate{topic!=""}'
      resources:
        overrides:
          topic: {resource: "pods", group: "metrics.k8s.io"}
      name:
        matches: "kafka_server_brokertopicmetrics_messagesinpersec_rate"
        as: "kafka_messages_in_per_second"
      metricsQuery: 'avg(kafka_server_brokertopicmetrics_messagesinpersec_rate{<<.LabelMatchers>>}) by (topic)'
    
    # Data quality metrics
    - seriesQuery: 'stream_analytics_null_rate{source!=""}'
      resources:
        overrides:
          source: {resource: "pods", group: "metrics.k8s.io"}
      name:
        matches: "stream_analytics_null_rate"
        as: "data_null_rate"
      metricsQuery: 'avg(stream_analytics_null_rate{<<.LabelMatchers>>}) by (source)'
    
    # Streaming processing lag metrics
    - seriesQuery: 'kafka_consumergroup_lag{consumergroup!=""}'
      resources:
        overrides:
          consumergroup: {resource: "pods", group: "metrics.k8s.io"}
      name:
        matches: "kafka_consumergroup_lag"
        as: "consumer_group_lag"
      metricsQuery: 'sum(kafka_consumergroup_lag{<<.LabelMatchers>>}) by (consumergroup)'
---
# Prometheus Adapter deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus-adapter
  labels:
    app.kubernetes.io/name: prometheus-adapter
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: prometheus-adapter
          image: "k8s.gcr.io/prometheus-adapter/prometheus-adapter:v0.10.0"
          imagePullPolicy: IfNotPresent
          args:
            - --cert-dir=/var/run/serving-cert
            - --config=/etc/adapter/config.yaml
            - --logtostderr=true
            - --metrics-relist-interval=1m
            - --prometheus-url=http://{{ .Release.Name }}-prometheus:9090/
            - --secure-port=6443
          ports:
            - containerPort: 6443
          livenessProbe:
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            {{- toYaml .Values.monitoring.prometheusAdapter.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/adapter
            - name: tmp
              mountPath: /tmp
            - name: serving-cert
              mountPath: /var/run/serving-cert
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}-prometheus-adapter
        - name: serving-cert
          emptyDir: {}
        - name: tmp
          emptyDir: {}
---
# Prometheus Adapter Service
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-prometheus-adapter
  labels:
    app.kubernetes.io/name: prometheus-adapter
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 6443
  selector:
    app.kubernetes.io/name: prometheus-adapter
    app.kubernetes.io/instance: {{ .Release.Name }}
---
# Prometheus Adapter API Service
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  labels:
    app.kubernetes.io/name: prometheus-adapter
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  service:
    name: {{ .Release.Name }}-prometheus-adapter
    namespace: {{ .Release.Namespace }}
  group: metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
{{- end }} 