apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-schema-registry
  labels:
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  replicas: {{ .Values.schemaRegistry.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: schema-registry
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: schema-registry
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: schema-registry
          image: "{{ .Values.schemaRegistry.image.repository }}:{{ .Values.schemaRegistry.image.tag | default .Values.images.tag }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: {{ .Values.schemaRegistry.env.SCHEMA_REGISTRY_HOST_NAME }}
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: {{ .Values.schemaRegistry.env.SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS }}
            - name: SCHEMA_REGISTRY_LISTENERS
              value: {{ .Values.schemaRegistry.env.SCHEMA_REGISTRY_LISTENERS }}
          resources:
            {{- toYaml .Values.schemaRegistry.resources | nindent 12 }}
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /subjects
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /subjects
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-schema-registry
  labels:
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: stream-analytics
spec:
  type: ClusterIP
  ports:
    - port: 8081
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/instance: {{ .Release.Name }} 